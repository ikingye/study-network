<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1.2 协议 on 网络学习笔记</title>
    <link>https://kingye.me/study-network/docs/basic/protocol/</link>
    <description>Recent content in 1.2 协议 on 网络学习笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kingye.me/study-network/docs/basic/protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/tcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/tcp/</guid>
      <description>&lt;h1 id=&#34;tcp&#34;&gt;&#xA;  TCP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tcp-报文格式&#34;&gt;&#xA;  TCP 报文格式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp-%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525230243.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;序号：Seq 序号，占 32 位，用来标识从 TCP 源端向目的端发送的字节流，发起方发送数据时对此进行标记。&lt;/li&gt;&#xA;&lt;li&gt;确认序号：Ack 序号，占 32 位，只有 ACK 标志位为 1 时，确认序号字段才有效，Ack=Seq+1。&lt;/li&gt;&#xA;&lt;li&gt;标志位：共 6 个，即 &lt;code&gt;URG&lt;/code&gt;、&lt;code&gt;ACK&lt;/code&gt;、&lt;code&gt;PSH&lt;/code&gt;、&lt;code&gt;RST&lt;/code&gt;、&lt;code&gt;SYN&lt;/code&gt;、&lt;code&gt;FIN&lt;/code&gt; 等，具体含义如下：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;URG&lt;/code&gt;：紧急指针（urgent pointer）有效。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ACK&lt;/code&gt;：确认序号有效。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;PSH&lt;/code&gt;：接收方应该尽快将这个报文交给应用层。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;RST&lt;/code&gt;：重置连接。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SYN&lt;/code&gt;：发起一个新连接。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;FIN&lt;/code&gt;：释放一个连接。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525230718.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;三次握手&#34;&gt;&#xA;  三次握手&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%ac%a1%e6%8f%a1%e6%89%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525231319.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;四次挥手&#34;&gt;&#xA;  四次挥手&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e6%ac%a1%e6%8c%a5%e6%89%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525231259.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;实际中还会出现同时发起主动关闭的情况&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525231407.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tcp-有限状态机&#34;&gt;&#xA;  TCP 有限状态机&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp-%e6%9c%89%e9%99%90%e7%8a%b6%e6%80%81%e6%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The TCP Finite State Machine (FSM)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.tcpipguide.com/free/t_TCPOperationalOverviewandtheTCPFiniteStateMachineF-2.htm&#34;&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525231924.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tcp-状态变迁图&#34;&gt;&#xA;  TCP 状态变迁图&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp-%e7%8a%b6%e6%80%81%e5%8f%98%e8%bf%81%e5%9b%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://docs.52im.net/extend/docs/book/tcpip/vol1/18/#h18_6&#34;&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525235421.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tcp-是全双工的&#34;&gt;&#xA;  TCP 是全双工的&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp-%e6%98%af%e5%85%a8%e5%8f%8c%e5%b7%a5%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tcp-的-rtt-算法&#34;&gt;&#xA;  TCP 的 RTT 算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tcp-%e7%9a%84-rtt-%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;经典算法rfc793httptoolsietforghtmlrfc793&#34;&gt;&#xA;  经典算法（&lt;a href=&#34;http://tools.ietf.org/html/rfc793&#34;&gt;RFC793&lt;/a&gt;）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%8f%e5%85%b8%e7%ae%97%e6%b3%95rfc793httptoolsietforghtmlrfc793&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先，先采样 RTT，记下最近好几次的 RTT 值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VXLAN</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/vxlan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/vxlan/</guid>
      <description>&lt;h1 id=&#34;vxlan&#34;&gt;&#xA;  VXLAN&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vxlan&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;overlay 的核心其实就是打隧道（tunnel）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;突破 VLAN 的最多 4096 个终端的数量限制，以满足大规模云计算数据中心的需求&lt;/li&gt;&#xA;&lt;li&gt;解决 &lt;a href=&#34;https://www.wikiwand.com/zh-cn/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AE&#34;&gt;STP&lt;/a&gt; 在大型 网路设备带宽浪费和收敛性能变慢的缺陷&lt;/li&gt;&#xA;&lt;li&gt;解决 ToR (Top of Rack) 交换机 MAC 表耗尽问题&lt;/li&gt;&#xA;&lt;li&gt;VXLAN 最大的贡献，就是实现了网络的扁平化管理，IP 地址不再与特定的 Site（某个数据中心）强行绑定在一起。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;NOV3 技术（&lt;code&gt;Network Virtualization Overlays&lt;/code&gt;）的实现原理其实非常简单，&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;VxLAN: MAC in UDP&lt;/li&gt;&#xA;&lt;li&gt;NvGRE: MAC in GRE&lt;/li&gt;&#xA;&lt;li&gt;STT: MAC in TCP（伪 TCP）&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>UDP</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/udp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/udp/</guid>
      <description>&lt;h1 id=&#34;udp&#34;&gt;&#xA;  UDP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#udp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>DNS</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/dns/</guid>
      <description>&lt;h1 id=&#34;dns&#34;&gt;&#xA;  DNS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dns&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;etchosts&#34;&gt;&#xA;  &lt;code&gt;/etc/hosts&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#etchosts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;hosts 文件是 Linux 系统中一个负责 IP 地址与域名快速解析的文件&lt;/p&gt;&#xA;&lt;h2 id=&#34;etcresolvconf&#34;&gt;&#xA;  &lt;code&gt;/etc/resolv.conf&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#etcresolvconf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;该文件是 DNS 域名解析的配置文件，它的格式很简单，&#xA;每行以一个关键字开头，后接配置参数。&lt;/p&gt;&#xA;&lt;p&gt;resolv.conf 的关键字主要有四个：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;nameserver # 定义 DNS 服务器的 IP 地址&lt;/li&gt;&#xA;&lt;li&gt;domain # 定义本地域名&lt;/li&gt;&#xA;&lt;li&gt;search # 定义域名的搜索列表&lt;/li&gt;&#xA;&lt;li&gt;sortlist # 对返回的域名进行排序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;最主要是 nameserver 关键字，如果没指定 nameserver 就找不到 DNS 服务器，其它关键字是可选的。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain centoscn.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;search  www.centocn.com www.wgjlb.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nameserver 202.96.128.86&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nameserver 202.96.128.166&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;etchostconf&#34;&gt;&#xA;  &lt;code&gt;/etc/host.conf&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#etchostconf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;解析器查询顺序配置文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 表示先查询本地 hosts 文件，如果没有结果，再尝试查找 BIND dns 服务器&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;order hosts bind&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>HTTP</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/http/</guid>
      <description>&lt;h1 id=&#34;http&#34;&gt;&#xA;  HTTP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#http&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;教程&#34;&gt;&#xA;  教程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%99%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ezlippitinyhttpdhttpsgithubcomezlippitinyhttpd-github-starshttpsimgshieldsiogithubstarsezlippitinyhttpdsvg-languagehttpsimgshieldsiogithublanguagestopezlippitinyhttpdsvg-last-taghttpsimgshieldsiogithubvtagezlippitinyhttpdsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitezlippitinyhttpdsvg&#34;&gt;&#xA;  &lt;a href=&#34;https://github.com/EZLippi/Tinyhttpd&#34;&gt;EZLippi/Tinyhttpd&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/EZLippi/Tinyhttpd.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/EZLippi/Tinyhttpd.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/EZLippi/Tinyhttpd.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/EZLippi/Tinyhttpd.svg&#34; alt=&#34;Last commit&#34; /&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ezlippitinyhttpdhttpsgithubcomezlippitinyhttpd-github-starshttpsimgshieldsiogithubstarsezlippitinyhttpdsvg-languagehttpsimgshieldsiogithublanguagestopezlippitinyhttpdsvg-last-taghttpsimgshieldsiogithubvtagezlippitinyhttpdsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitezlippitinyhttpdsvg&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Tinyhttpd 是 J. David Blackstone 在 1999 年写的一个不到 500 行的超轻量型 Http Server，用来学习非常不错，可以帮助我们真正理解服务器程序的本质。&#xA;官网:http://tinyhttpd.sourceforge.net&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSL</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/ssl/</guid>
      <description>&lt;h1 id=&#34;ssl&#34;&gt;&#xA;  SSL&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ssl&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;SSL&lt;/code&gt;，&lt;code&gt;Secure Socket Layer&lt;/code&gt;，安全套接字层&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;TLS&lt;/code&gt;，&lt;code&gt;Transport Layer Security&lt;/code&gt;，传输层安全协议&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;版本&#34;&gt;&#xA;  版本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%88%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525104221.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1994 年，NetScape 公司设计了 SSL 协议（Secure Sockets Layer）的 1.0 版，但是未发布。&lt;/li&gt;&#xA;&lt;li&gt;1995 年，NetScape 公司发布 SSL 2.0 版，很快发现有严重漏洞。&lt;/li&gt;&#xA;&lt;li&gt;1996 年，SSL 3.0 版问世，得到大规模应用。&lt;/li&gt;&#xA;&lt;li&gt;1999 年，互联网标准化组织 ISOC 接替 NetScape 公司，发布了 SSL 的升级版 TLS 1.0 版。&lt;/li&gt;&#xA;&lt;li&gt;2006 年和 2008 年，TLS 进行了两次升级，分别为 TLS 1.1 版和 TLS 1.2 版。最新的变动是 2018 年 TLS 1.3 的&lt;a href=&#34;https://tools.ietf.org/html/rfc8447&#34;&gt;修订版&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Protocol&lt;/th&gt;&#xA;          &lt;th&gt;Published&lt;/th&gt;&#xA;          &lt;th&gt;Status&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SSL 1.0&lt;/td&gt;&#xA;          &lt;td&gt;Unpublished&lt;/td&gt;&#xA;          &lt;td&gt;Unpublished&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SSL 2.0&lt;/td&gt;&#xA;          &lt;td&gt;1995&lt;/td&gt;&#xA;          &lt;td&gt;Deprecated in 2011 (&lt;a href=&#34;https://tools.ietf.org/html/rfc6176&#34;&gt;RFC 6176&lt;/a&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SSL 3.0&lt;/td&gt;&#xA;          &lt;td&gt;1996&lt;/td&gt;&#xA;          &lt;td&gt;Deprecated in 2015 (&lt;a href=&#34;https://tools.ietf.org/html/rfc7568&#34;&gt;RFC 7568&lt;/a&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TLS 1.0&lt;/td&gt;&#xA;          &lt;td&gt;1999&lt;/td&gt;&#xA;          &lt;td&gt;Deprecated in 2020&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TLS 1.1&lt;/td&gt;&#xA;          &lt;td&gt;2006&lt;/td&gt;&#xA;          &lt;td&gt;Deprecated in 2020&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TLS 1.2&lt;/td&gt;&#xA;          &lt;td&gt;2008&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TLS 1.3&lt;/td&gt;&#xA;          &lt;td&gt;2018&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;握手流程&#34;&gt;&#xA;  握手流程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%a1%e6%89%8b%e6%b5%81%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Client-hello 阶段&lt;/li&gt;&#xA;&lt;li&gt;Server-hello 阶段&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200525110303.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebSocket</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/websocket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/websocket/</guid>
      <description>&lt;h1 id=&#34;websocket&#34;&gt;&#xA;  WebSocket&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#websocket&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;WebSocket 的目标是在一个单独的持久连接上提供全双工、双向通信。&lt;/p&gt;&#xA;&lt;p&gt;在 Javascript 创建了 Web Socket 之后，会有一个 HTTP 请求发送到浏览器以发起连接。&#xA;在取得服务器响应后，建立的连接会将 HTTP &lt;strong&gt;升级&lt;/strong&gt;为 WebSocket 协议。&lt;/p&gt;&#xA;&lt;p&gt;由于 WebSocket 使用自定义的协议，所以 URL 模式也略有不同。&lt;/p&gt;&#xA;&lt;p&gt;未加密的连接不再是 http://，而是 &lt;code&gt;ws://&lt;/code&gt;; 加密的连接也不是 https://，而是 &lt;code&gt;wss://&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;使用自定义协议而非 HTTP 协议的好处是，能够在客户端和服务器之间&lt;strong&gt;发送非常少量的数据&lt;/strong&gt;，而不必担心 HTTP 那样&lt;strong&gt;字节级&lt;/strong&gt;的开销。&lt;/p&gt;&#xA;&lt;p&gt;由于传递的数据包很小，所以 WebSocket 非常适合移动应用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;特点&#34;&gt;&#xA;  特点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以发送文本，也可以发送二进制数据。&lt;/li&gt;&#xA;&lt;li&gt;没有同源限制，客户端可以与任意服务器通信。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.wikiwand.com/zh-cn/%E6%8E%A8%E9%80%81%E6%8A%80%E6%9C%AF&#34;&gt;推送技术&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2017/05/websocket.html&#34;&gt;阮一峰 - WebSocket 教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>HTTPs</title>
      <link>https://kingye.me/study-network/docs/basic/protocol/https/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-network/docs/basic/protocol/https/</guid>
      <description>&lt;h1 id=&#34;https&#34;&gt;&#xA;  HTTPs&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#https&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;从-http-切换到-https-需要几步&#34;&gt;&#xA;  从 HTTP 切换到 HTTPs 需要几步&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%8e-http-%e5%88%87%e6%8d%a2%e5%88%b0-https-%e9%9c%80%e8%a6%81%e5%87%a0%e6%ad%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;EVALUATE YOUR WEBSITE FOR SECURITY RISKS&lt;/li&gt;&#xA;&lt;li&gt;PERFORM FULL WEBSITE BACKUP&lt;/li&gt;&#xA;&lt;li&gt;MAKE THE RIGHTCERTIFICATE CHOICE&lt;/li&gt;&#xA;&lt;li&gt;INSTALL AND TESTCERTIFICATES&lt;/li&gt;&#xA;&lt;li&gt;REMOVE MIXED CONTENT&lt;/li&gt;&#xA;&lt;li&gt;MAINTAIN CERTIFICATE COMPLIANCE&lt;/li&gt;&#xA;&lt;li&gt;REDIRECT HTTP TRAFFIC TO HTTPS&lt;/li&gt;&#xA;&lt;li&gt;IMPLEMENT AN AUTOMATED SCANNING SYSTEM&lt;/li&gt;&#xA;&lt;li&gt;SECURE YOUR COOKIES&lt;/li&gt;&#xA;&lt;li&gt;IMPLEMENT HTTP STRICT TRANSPORT SECURITY&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;参考&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.websecurity.digicert.com/content/dam/websitesecurity/digitalassets/desktop/pdfs/Infographics/10_Steps_Switch_HTTP_to_HTTPS_infographic_en_us.pdf&#34;&gt;10 STEPS TO SWITCH FROM HTTP TO HTTPS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
